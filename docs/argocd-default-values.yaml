global:
  networkPolicy:
    create: true

extraObjects:
  - apiVersion: cilium.io/v2
    kind: CiliumNetworkPolicy
    metadata:
      name: "allow-argocd-egress"
      namespace: argocd
    spec:
      endpointSelector:
        matchLabels:
          app.kubernetes.io/component: repo-server
          app.kubernetes.io/part-of: argocd
      egress:
        - toEntities:
            - "all"
  - apiVersion: cilium.io/v2
    kind: CiliumClusterwideNetworkPolicy
    metadata:
      name: "allow-egress-to-coredns"
    spec:
      endpointSelector: {}
      egress:
        - toEndpoints:
            - matchLabels:
                "k8s:io.kubernetes.pod.namespace": kube-system
                "k8s:k8s-app": kube-dns
          toPorts:
            - ports:
                - port: "53"
                  protocol: ANY
              rules:
                dns:
                  - matchPattern: "*"
  - apiVersion: cilium.io/v2
    kind: CiliumClusterwideNetworkPolicy
    metadata:
      name: "allow-egress-to-cluster"
    spec:
      endpointSelector: {}
      egress:
        - toEntities:
            - "cluster"
  - apiVersion: "cilium.io/v2"
    kind: CiliumClusterwideNetworkPolicy
    metadata:
      name: "cilium-health-checks"
    spec:
      endpointSelector:
        matchLabels:
          "reserved:health": ""
      ingress:
        - fromEntities:
            - remote-node
      egress:
        - toEntities:
            - remote-node
  - apiVersion: cilium.io/v2
    kind: CiliumNetworkPolicy
    metadata:
      name: trusted-kube-system
      namespace: kube-system
    spec:
      endpointSelector: {}
      egress:
        - toEntities:
            - all
      ingress:
        - fromEntities:
            - all
  - apiVersion: scheduling.k8s.io/v1
    description: Used for infra critical pods that must run for the apps to function properly
    kind: PriorityClass
    metadata:
      name: infra
    preemptionPolicy: PreemptLowerPriority
    value: 1000000000
