apiVersion: v1
kind: ServiceAccount
metadata:
  name: tailscale
  labels:
    app.kubernetes.io/part-of: tailscale
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: tailscale
  labels:
    app.kubernetes.io/part-of: tailscale
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["create", "get", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tailscale
  labels:
    app.kubernetes.io/part-of: tailscale
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tailscale
subjects:
  - kind: ServiceAccount
    namespace: tailscale
    name: tailscale
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tailscale
  labels:
    app.kubernetes.io/name: tailscale
    app.kubernetes.io/part-of: tailscale
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: tailscale
      app.kubernetes.io/part-of: tailscale
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tailscale
        app.kubernetes.io/part-of: tailscale
    spec:
      serviceAccountName: tailscale
      terminationGracePeriodSeconds: 300
      containers:
        - name: tailscale
          image: ghcr.io/tailscale/tailscale:v1.36
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
          resources:
            requests:
              cpu: 100m
              memory: 90Mi
            limits:
              cpu: 1
              memory: 1Gi
          env:
            - name: TS_USERSPACE
              value: "false"
            - name: TS_AUTH_KEY
              valueFrom:
                secretKeyRef:
                  name: tailscale-config
                  key: TS_AUTH_KEY
            - name: TS_KUBE_SECRET
              value: tailscale-config
            - name: TS_DEST_IP
              value: 10.111.0.100 # ClusterIP of private ingress-nginx
            - name: TS_EXTRA_ARGS
              value: --hostname=ingress-nginx-private
